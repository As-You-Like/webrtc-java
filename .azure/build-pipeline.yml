trigger:
  batch: true
  branches:
    include:
    - master

pr:
  branches:
    include:
    - master

variables:
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  WEBRTC_CACHE_FOLDER: $(Pipeline.Workspace)/webrtc-build

strategy:
  matrix:
    linux:
      imageName: "ubuntu-latest"
    mac:
      imageName: "macos-latest"
    windows:
      imageName: "windows-latest"

pool:
  vmImage: $(imageName)

steps:
- task: Bash@3
  displayName: "Set up Linux audio system"
  condition: eq(variables['Agent.OS'], 'Linux')
  inputs:
    targetType: "inline"
    script: |
      sudo apt-get install -y pulseaudio
      pulseaudio --start

- task: Bash@3
  displayName: "Set up GPG"
  inputs:
    targetType: "inline"
    script: gpg --import --no-tty --batch "$(gpgKey.secureFilePath)"

- task: DownloadSecureFile@1
  displayName: "Download GPG key"
  name: gpgKey
  inputs:
    secureFile: gpg-key.asc

- task: DownloadSecureFile@1
  displayName: "Download Maven settings"
  name: mvnSettings
  inputs:
    secureFile: settings.xml

- task: Cache@2
  displayName: "Set up WebRTC cache"
  inputs:
    key: 'webrtc | 3987 | "$(Agent.OS)" | "$(Agent.OSArchitecture)" | webrtc-jni/pom.xml'
    restoreKeys: webrtc | 3987 | "$(Agent.OS)" | "$(Agent.OSArchitecture)"
    path: $(WEBRTC_CACHE_FOLDER)

- task: Cache@2
  displayName: "Set up Maven cache"
  inputs:
    key: 'maven | "$(Agent.OS)" | **/pom.xml, !**/target/**'
    restoreKeys: |
      maven | "$(Agent.OS)"
      maven
    path: $(MAVEN_CACHE_FOLDER)

- task: Maven@3
  displayName: "Build"
  env:
    LOCAL_REPO: $(MAVEN_CACHE_FOLDER)
    WEBRTC_INSTALL_FOLDER: $(WEBRTC_CACHE_FOLDER)
  inputs:
    jdkVersionOption: "1.11"
    publishJUnitResults: false
    goals: "package"
    options: "-DskipTests -s $(mvnSettings.secureFilePath)"

- task: Maven@3
  displayName: "Test"
  env:
    LOCAL_REPO: $(MAVEN_CACHE_FOLDER)
  inputs:
    jdkVersionOption: "1.11"
    mavenPomFile: 'webrtc/pom.xml'
    goals: "jar:jar surefire:test"
    options: "-s $(mvnSettings.secureFilePath)"
    testRunTitle: "$(Agent.OS) ($(Agent.OSArchitecture))"

- task: Maven@3
  displayName: "Deploy"
  env:
    NEXUS_USERNAME: $(NEXUS_USERNAME)
    NEXUS_PASSWORD: $(NEXUS_PASSWORD)
    LOCAL_REPO: $(MAVEN_CACHE_FOLDER)
    WEBRTC_INSTALL_FOLDER: $(WEBRTC_CACHE_FOLDER)
  inputs:
    jdkVersionOption: "1.11"
    publishJUnitResults: false
    goals: "deploy"
    options: "-DskipTests -s $(mvnSettings.secureFilePath)"
